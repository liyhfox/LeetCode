Description:
Given a binary array, find the maximum number of consecutive 1s in this array.

Note:
1. The input array will only contain 0 and 1.
2. The length of input array is a positive integer and will not exceed 10,000

Solution(own):
class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        int left = 0;
        int right = 0;
        int maxLen = 0;
        for (int i = 0; i < nums.size(); ++i) {
            if (nums[i] == 1) {
                ++right;
            } 
            else {
                if (left != right) {
                    maxLen = (right - left) > maxLen ? (right - left) : maxLen;
                    ++right;
                    left = right;
                } 
                else {
                    ++right;
                    ++left;
                }
            }
        }
        return maxLen > (right - left) ? maxLen : (right - left);
    }
};

Solution(beautiful):
class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        int max = 0;
        int sum = 0;
        for (int i = 0; i < nums.size(); ++i) {
            sum = (sum + nums[i]) * nums[i]; //Use the fact that multiplication with 0 resets everything..
            max = sum > max ? sum : max;
        }
        return max;
    }
}
